/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.tvd.thptty.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.tvd.thptty.model.TYTeacher;
import org.tvd.thptty.model.TYTeacherModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the TYTeacher service. Represents a row in the &quot;TY_TYTeacher&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.tvd.thptty.model.TYTeacherModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TYTeacherImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a t y teacher model instance should use the {@link org.tvd.thptty.model.TYTeacher} interface instead.
 * </p>
 *
 * @author Ta Van Dung
 * @see TYTeacherImpl
 * @see org.tvd.thptty.model.TYTeacher
 * @see org.tvd.thptty.model.TYTeacherModel
 * @generated
 */
public class TYTeacherModelImpl extends BaseModelImpl<TYTeacher>
	implements TYTeacherModel {
	public static final String TABLE_NAME = "TY_TYTeacher";
	public static final Object[][] TABLE_COLUMNS = {
			{ "teacherId", new Integer(Types.BIGINT) },
			{ "teacherDegree", new Integer(Types.VARCHAR) },
			{ "teacherCertificate", new Integer(Types.VARCHAR) },
			{ "userId", new Integer(Types.BIGINT) }
		};
	public static final String TABLE_SQL_CREATE = "create table TY_TYTeacher (teacherId LONG not null primary key,teacherDegree VARCHAR(75) null,teacherCertificate VARCHAR(75) null,userId LONG)";
	public static final String TABLE_SQL_DROP = "drop table TY_TYTeacher";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.tvd.thptty.model.TYTeacher"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.tvd.thptty.model.TYTeacher"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.tvd.thptty.model.TYTeacher"));

	public TYTeacherModelImpl() {
	}

	public long getPrimaryKey() {
		return _teacherId;
	}

	public void setPrimaryKey(long pk) {
		setTeacherId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_teacherId);
	}

	public long getTeacherId() {
		return _teacherId;
	}

	public void setTeacherId(long teacherId) {
		_teacherId = teacherId;
	}

	public String getTeacherDegree() {
		if (_teacherDegree == null) {
			return StringPool.BLANK;
		}
		else {
			return _teacherDegree;
		}
	}

	public void setTeacherDegree(String teacherDegree) {
		_teacherDegree = teacherDegree;
	}

	public String getTeacherCertificate() {
		if (_teacherCertificate == null) {
			return StringPool.BLANK;
		}
		else {
			return _teacherCertificate;
		}
	}

	public void setTeacherCertificate(String teacherCertificate) {
		_teacherCertificate = teacherCertificate;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public TYTeacher toEscapedModel() {
		if (isEscapedModel()) {
			return (TYTeacher)this;
		}
		else {
			return (TYTeacher)Proxy.newProxyInstance(TYTeacher.class.getClassLoader(),
				new Class[] { TYTeacher.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					TYTeacher.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		TYTeacherImpl tyTeacherImpl = new TYTeacherImpl();

		tyTeacherImpl.setTeacherId(getTeacherId());

		tyTeacherImpl.setTeacherDegree(getTeacherDegree());

		tyTeacherImpl.setTeacherCertificate(getTeacherCertificate());

		tyTeacherImpl.setUserId(getUserId());

		TYTeacherModelImpl tyTeacherModelImpl = tyTeacherImpl;

		tyTeacherModelImpl._originalUserId = tyTeacherModelImpl._userId;

		tyTeacherModelImpl._setOriginalUserId = false;

		return tyTeacherImpl;
	}

	public int compareTo(TYTeacher tyTeacher) {
		long pk = tyTeacher.getPrimaryKey();

		if (getPrimaryKey() < pk) {
			return -1;
		}
		else if (getPrimaryKey() > pk) {
			return 1;
		}
		else {
			return 0;
		}
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TYTeacher tyTeacher = null;

		try {
			tyTeacher = (TYTeacher)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = tyTeacher.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{teacherId=");
		sb.append(getTeacherId());
		sb.append(", teacherDegree=");
		sb.append(getTeacherDegree());
		sb.append(", teacherCertificate=");
		sb.append(getTeacherCertificate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("org.tvd.thptty.model.TYTeacher");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>teacherId</column-name><column-value><![CDATA[");
		sb.append(getTeacherId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>teacherDegree</column-name><column-value><![CDATA[");
		sb.append(getTeacherDegree());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>teacherCertificate</column-name><column-value><![CDATA[");
		sb.append(getTeacherCertificate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _teacherId;
	private String _teacherDegree;
	private String _teacherCertificate;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private transient ExpandoBridge _expandoBridge;
}