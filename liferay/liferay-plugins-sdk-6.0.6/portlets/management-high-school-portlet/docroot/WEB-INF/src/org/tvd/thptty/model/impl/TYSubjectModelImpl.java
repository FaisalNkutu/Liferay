/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.tvd.thptty.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.tvd.thptty.model.TYSubject;
import org.tvd.thptty.model.TYSubjectModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the TYSubject service. Represents a row in the &quot;TY_TYSubject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.tvd.thptty.model.TYSubjectModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TYSubjectImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a t y subject model instance should use the {@link org.tvd.thptty.model.TYSubject} interface instead.
 * </p>
 *
 * @author Ta Van Dung
 * @see TYSubjectImpl
 * @see org.tvd.thptty.model.TYSubject
 * @see org.tvd.thptty.model.TYSubjectModel
 * @generated
 */
public class TYSubjectModelImpl extends BaseModelImpl<TYSubject>
	implements TYSubjectModel {
	public static final String TABLE_NAME = "TY_TYSubject";
	public static final Object[][] TABLE_COLUMNS = {
			{ "subjectId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "subjectCode", new Integer(Types.VARCHAR) },
			{ "subjectName", new Integer(Types.VARCHAR) },
			{ "description", new Integer(Types.VARCHAR) }
		};
	public static final String TABLE_SQL_CREATE = "create table TY_TYSubject (subjectId LONG not null primary key,companyId LONG,groupId LONG,subjectCode VARCHAR(75) null,subjectName VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table TY_TYSubject";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.tvd.thptty.model.TYSubject"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.tvd.thptty.model.TYSubject"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.tvd.thptty.model.TYSubject"));

	public TYSubjectModelImpl() {
	}

	public long getPrimaryKey() {
		return _subjectId;
	}

	public void setPrimaryKey(long pk) {
		setSubjectId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_subjectId);
	}

	public long getSubjectId() {
		return _subjectId;
	}

	public void setSubjectId(long subjectId) {
		_subjectId = subjectId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public String getSubjectCode() {
		if (_subjectCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectCode;
		}
	}

	public void setSubjectCode(String subjectCode) {
		if (_originalSubjectCode == null) {
			_originalSubjectCode = _subjectCode;
		}

		_subjectCode = subjectCode;
	}

	public String getOriginalSubjectCode() {
		return GetterUtil.getString(_originalSubjectCode);
	}

	public String getSubjectName() {
		if (_subjectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectName;
		}
	}

	public void setSubjectName(String subjectName) {
		if (_originalSubjectName == null) {
			_originalSubjectName = _subjectName;
		}

		_subjectName = subjectName;
	}

	public String getOriginalSubjectName() {
		return GetterUtil.getString(_originalSubjectName);
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public TYSubject toEscapedModel() {
		if (isEscapedModel()) {
			return (TYSubject)this;
		}
		else {
			return (TYSubject)Proxy.newProxyInstance(TYSubject.class.getClassLoader(),
				new Class[] { TYSubject.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					TYSubject.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		TYSubjectImpl tySubjectImpl = new TYSubjectImpl();

		tySubjectImpl.setSubjectId(getSubjectId());

		tySubjectImpl.setCompanyId(getCompanyId());

		TYSubjectModelImpl tySubjectModelImpl = tySubjectImpl;

		tySubjectModelImpl._originalCompanyId = tySubjectModelImpl._companyId;

		tySubjectModelImpl._setOriginalCompanyId = false;
		tySubjectImpl.setGroupId(getGroupId());

		tySubjectModelImpl._originalGroupId = tySubjectModelImpl._groupId;

		tySubjectModelImpl._setOriginalGroupId = false;
		tySubjectImpl.setSubjectCode(getSubjectCode());

		tySubjectModelImpl._originalSubjectCode = tySubjectModelImpl._subjectCode;

		tySubjectImpl.setSubjectName(getSubjectName());

		tySubjectModelImpl._originalSubjectName = tySubjectModelImpl._subjectName;

		tySubjectImpl.setDescription(getDescription());

		return tySubjectImpl;
	}

	public int compareTo(TYSubject tySubject) {
		long pk = tySubject.getPrimaryKey();

		if (getPrimaryKey() < pk) {
			return -1;
		}
		else if (getPrimaryKey() > pk) {
			return 1;
		}
		else {
			return 0;
		}
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TYSubject tySubject = null;

		try {
			tySubject = (TYSubject)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = tySubject.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{subjectId=");
		sb.append(getSubjectId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", subjectCode=");
		sb.append(getSubjectCode());
		sb.append(", subjectName=");
		sb.append(getSubjectName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("org.tvd.thptty.model.TYSubject");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>subjectId</column-name><column-value><![CDATA[");
		sb.append(getSubjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectCode</column-name><column-value><![CDATA[");
		sb.append(getSubjectCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectName</column-name><column-value><![CDATA[");
		sb.append(getSubjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _subjectId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _subjectCode;
	private String _originalSubjectCode;
	private String _subjectName;
	private String _originalSubjectName;
	private String _description;
	private transient ExpandoBridge _expandoBridge;
}