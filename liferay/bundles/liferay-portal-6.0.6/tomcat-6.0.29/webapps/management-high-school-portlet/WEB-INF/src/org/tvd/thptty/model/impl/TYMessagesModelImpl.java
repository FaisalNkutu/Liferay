/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.tvd.thptty.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.tvd.thptty.model.TYMessages;
import org.tvd.thptty.model.TYMessagesModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the TYMessages service. Represents a row in the &quot;TY_TYMessages&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.tvd.thptty.model.TYMessagesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TYMessagesImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a t y messages model instance should use the {@link org.tvd.thptty.model.TYMessages} interface instead.
 * </p>
 *
 * @author Ta Van Dung
 * @see TYMessagesImpl
 * @see org.tvd.thptty.model.TYMessages
 * @see org.tvd.thptty.model.TYMessagesModel
 * @generated
 */
public class TYMessagesModelImpl extends BaseModelImpl<TYMessages>
	implements TYMessagesModel {
	public static final String TABLE_NAME = "TY_TYMessages";
	public static final Object[][] TABLE_COLUMNS = {
			{ "messageId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "actionId", new Integer(Types.BIGINT) },
			{ "userId", new Integer(Types.BIGINT) },
			{ "classId", new Integer(Types.BIGINT) },
			{ "subjectId", new Integer(Types.BIGINT) },
			{ "happenDate", new Integer(Types.TIMESTAMP) }
		};
	public static final String TABLE_SQL_CREATE = "create table TY_TYMessages (messageId LONG not null primary key,companyId LONG,groupId LONG,actionId LONG,userId LONG,classId LONG,subjectId LONG,happenDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table TY_TYMessages";
	public static final String ORDER_BY_JPQL = " ORDER BY tyMessages.happenDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY TY_TYMessages.happenDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.tvd.thptty.model.TYMessages"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.tvd.thptty.model.TYMessages"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.tvd.thptty.model.TYMessages"));

	public TYMessagesModelImpl() {
	}

	public long getPrimaryKey() {
		return _messageId;
	}

	public void setPrimaryKey(long pk) {
		setMessageId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_messageId);
	}

	public long getMessageId() {
		return _messageId;
	}

	public void setMessageId(long messageId) {
		_messageId = messageId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getActionId() {
		return _actionId;
	}

	public void setActionId(long actionId) {
		_actionId = actionId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getClassId() {
		return _classId;
	}

	public void setClassId(long classId) {
		_classId = classId;
	}

	public long getSubjectId() {
		return _subjectId;
	}

	public void setSubjectId(long subjectId) {
		_subjectId = subjectId;
	}

	public Date getHappenDate() {
		return _happenDate;
	}

	public void setHappenDate(Date happenDate) {
		_happenDate = happenDate;
	}

	public TYMessages toEscapedModel() {
		if (isEscapedModel()) {
			return (TYMessages)this;
		}
		else {
			return (TYMessages)Proxy.newProxyInstance(TYMessages.class.getClassLoader(),
				new Class[] { TYMessages.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					TYMessages.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		TYMessagesImpl tyMessagesImpl = new TYMessagesImpl();

		tyMessagesImpl.setMessageId(getMessageId());

		tyMessagesImpl.setCompanyId(getCompanyId());

		tyMessagesImpl.setGroupId(getGroupId());

		tyMessagesImpl.setActionId(getActionId());

		tyMessagesImpl.setUserId(getUserId());

		tyMessagesImpl.setClassId(getClassId());

		tyMessagesImpl.setSubjectId(getSubjectId());

		tyMessagesImpl.setHappenDate(getHappenDate());

		return tyMessagesImpl;
	}

	public int compareTo(TYMessages tyMessages) {
		int value = 0;

		value = DateUtil.compareTo(getHappenDate(), tyMessages.getHappenDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TYMessages tyMessages = null;

		try {
			tyMessages = (TYMessages)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = tyMessages.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{messageId=");
		sb.append(getMessageId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", actionId=");
		sb.append(getActionId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", classId=");
		sb.append(getClassId());
		sb.append(", subjectId=");
		sb.append(getSubjectId());
		sb.append(", happenDate=");
		sb.append(getHappenDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("org.tvd.thptty.model.TYMessages");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>messageId</column-name><column-value><![CDATA[");
		sb.append(getMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionId</column-name><column-value><![CDATA[");
		sb.append(getActionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classId</column-name><column-value><![CDATA[");
		sb.append(getClassId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectId</column-name><column-value><![CDATA[");
		sb.append(getSubjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>happenDate</column-name><column-value><![CDATA[");
		sb.append(getHappenDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _messageId;
	private long _companyId;
	private long _groupId;
	private long _actionId;
	private long _userId;
	private String _userUuid;
	private long _classId;
	private long _subjectId;
	private Date _happenDate;
	private transient ExpandoBridge _expandoBridge;
}